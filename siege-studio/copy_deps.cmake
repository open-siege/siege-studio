add_custom_target(${PROJECT_NAME}-dependencies ALL COMMAND ${CMAKE_COMMAND} -E make_directory $<TARGET_FILE_DIR:${PROJECT_NAME}>)

add_custom_command(TARGET ${PROJECT_NAME}-dependencies POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:unvol> $<TARGET_FILE_DIR:${PROJECT_NAME}>
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:dts-to-json> $<TARGET_FILE_DIR:${PROJECT_NAME}>
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:dts-to-obj> $<TARGET_FILE_DIR:${PROJECT_NAME}>)

if(TARGET game-unpack)
   add_custom_command(TARGET ${PROJECT_NAME}-dependencies POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:game-unpack> $<TARGET_FILE_DIR:${PROJECT_NAME}>)
endif()

add_dependencies(${PROJECT_NAME} ${PROJECT_NAME}-dependencies)

add_dependencies(${PROJECT_NAME}-dependencies 
    siege-presentation-2d 
    siege-presentation-3d 
    siege-presentation-resource 
    siege-presentation-audio 
    dts-to-json
    dts-to-obj
    unvol)

set(CONTENT_TARGETS siege-presentation-2d 
					siege-presentation-3d 
					siege-presentation-resource 
					siege-presentation-audio 
					siege-presentation-configuration
					siege-presentation-executable
					${PROJECT_NAME}-core
                    dts-to-json
                    dts-to-obj
                    unvol
                    )

if(TARGET game-unpack)
    set(CONTENT_TARGETS ${CONTENT_TARGETS} game-unpack)
endif()

add_custom_command(TARGET ${PROJECT_NAME}-dependencies PRE_BUILD
			COMMAND echo /* Autogenerated resource file */ > "${CMAKE_CURRENT_SOURCE_DIR}/src/extensions.rc")

foreach(CONTENT_TARGET IN ITEMS ${CONTENT_TARGETS})
			add_dependencies(${PROJECT_NAME}-dependencies ${CONTENT_TARGET})
			add_custom_command(TARGET ${PROJECT_NAME}-dependencies POST_BUILD
			COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${CONTENT_TARGET}> $<TARGET_FILE_DIR:${PROJECT_NAME}>)
        
			if (WIN32)
				add_custom_command(TARGET ${PROJECT_NAME}-dependencies PRE_BUILD
				COMMAND echo "$<TARGET_FILE_NAME:${CONTENT_TARGET}>" RCDATA "\"$<TARGET_FILE:${CONTENT_TARGET}>\"" >> "${CMAKE_CURRENT_SOURCE_DIR}/src/extensions.rc")
			endif()
endforeach()

set(EXTENSION_PROJECTS siege-extension-id-tech 
                   siege-extension-3space 
                   siege-extension-other)
set(EXT_TARGETS)

foreach(EXT_PROJECT IN ITEMS ${EXTENSION_PROJECTS})
    get_property(PROJECT_TARGETS DIRECTORY ${CMAKE_SOURCE_DIR}/siege-modules/extension/${EXT_PROJECT} PROPERTY BUILDSYSTEM_TARGETS)
    list(APPEND EXT_TARGETS ${PROJECT_TARGETS}) 
endforeach()

list(APPEND EXT_TARGETS siege-input-filtration ws2_32-on-zero-tier wsock32-on-zero-tier)

if(TARGET zt-shared)
    list(APPEND EXT_TARGETS zt-shared)
endif()

foreach(EXT_TARGET IN ITEMS ${EXT_TARGETS})
    get_target_property(TARGET_TYPE ${EXT_TARGET} TYPE)
        if (${TARGET_TYPE} STREQUAL "STATIC_LIBRARY")
            continue()
        endif()
    add_dependencies(${PROJECT_NAME}-dependencies ${EXT_TARGET})
    add_custom_command(TARGET ${PROJECT_NAME}-dependencies POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${EXT_TARGET}> $<TARGET_FILE_DIR:${PROJECT_NAME}>)

    if (WIN32)
        add_custom_command(TARGET ${PROJECT_NAME}-dependencies PRE_BUILD
            COMMAND echo "$<TARGET_FILE_NAME:${EXT_TARGET}>" RCDATA "\"$<TARGET_FILE:${EXT_TARGET}>\"" >> "${CMAKE_CURRENT_SOURCE_DIR}/src/extensions.rc")
    endif()
endforeach()


set(INSTALLATION_PROJECTS siege-installation-dynamix 
                          siege-installation-other 
                          siege-installation-raven)
set(INST_TARGETS)

foreach(INST_PROJECT IN ITEMS ${INSTALLATION_PROJECTS})
    get_property(PROJECT_TARGETS DIRECTORY ${CMAKE_SOURCE_DIR}/siege-modules/installation/${INST_PROJECT} PROPERTY BUILDSYSTEM_TARGETS)
    list(APPEND INST_TARGETS ${PROJECT_TARGETS}) 
endforeach()

foreach(INST_TARGET IN ITEMS ${INST_TARGETS})
    get_target_property(TARGET_TYPE ${INST_TARGET} TYPE)
        if (${TARGET_TYPE} STREQUAL "STATIC_LIBRARY")
            continue()
        endif()
    add_dependencies(${PROJECT_NAME}-dependencies ${INST_TARGET})
    add_custom_command(TARGET ${PROJECT_NAME}-dependencies POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${INST_TARGET}> $<TARGET_FILE_DIR:${PROJECT_NAME}>)

    if (WIN32)
        add_custom_command(TARGET ${PROJECT_NAME}-dependencies PRE_BUILD
            COMMAND echo "$<TARGET_FILE_NAME:${INST_TARGET}>" RCDATA "\"$<TARGET_FILE:${INST_TARGET}>\"" >> "${CMAKE_CURRENT_SOURCE_DIR}/src/extensions.rc")
    endif()
endforeach()